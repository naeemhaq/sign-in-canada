{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/naeemhaq/sign-in-canada/master/gluu-az-template/install_apache.sh",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "devName": {
      "type": "string",
      "metadata": {
        "description": "The prefix string to add to a generated string that is unique to the developer and RG."
      }
    },
    "location": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "adminPublicKey": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "autoShutdownNotificationEmail": {
      "type": "string"
    },
    "autoShutdownNotificationLocale": {
      "type": "string"
    },
    "autoShutdownNotificationStatus": {
      "type": "string"
    },
    "autoShutdownStatus": {
      "type": "string"
    },
    "autoShutdownTime": {
      "type": "string"
    },
    "autoShutdownTimeZone": {
      "type": "string"
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "gluuserver-cc-01",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "networkInterfaceName": {
      "type": "string"
    },
    "networkSecurityGroupName": {
      "type": "string"
    },
    "networkSecurityGroupRules": {
      "type": "array"
    },
    "osDiskType": {
      "type": "string"
    },
    "publicIpAddressName": {
      "type": "string"
    },
    "publicIpAddressSku": {
      "type": "string"
    },
    "publicIpAddressType": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "addressPrefixes": {
      "type": "array"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string"
    },
    "virtualNetworkName":{
      "type": "string"
    }
  },
    "variables": {
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "storageName": "[toLower( concat( parameters('devName'), uniqueString(resourceGroup().id) ) )]",
        "rgName": "[toLower( concat( parameters('devName'), parameters('resourceGroupName'), uniqueString(resourceGroup().id) ) )]",
        "nicName": "[toLower( concat( parameters('devName'), parameters('networkInterfaceName'), uniqueString(resourceGroup().id) ) )]",
        "pipName": "[toLower( concat( parameters('devName'), parameters('publicIpAddressName')) )]",
        "vmName": "[toLower( concat( parameters('devName'), parameters('virtualMachineName'), uniqueString(resourceGroup().id) ) )]",
        "nsgName": "[toLower( concat( parameters('devName'), parameters('networkSecurityGroupName'), uniqueString(resourceGroup().id) ) )]",
        "vnetName": "[toLower( concat( parameters('devName'), parameters('virtualNetworkName')) )]",
        "subnetNamevar": "[toLower( concat(variables('vnetName'), '/', parameters('subnetName') ) )]"
    },
    "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts",
          "name": "[variables('storageName')]",
          "apiVersion": "2015-06-15",
          "location": "[parameters('location')]",
          "properties": {
            "accountType": "Standard_LRS"
          }
        },
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('pipName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetNamevar')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
          "name": "[variables('vnetName')]",
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2019-09-01",
          "location": "[parameters('location')]",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": "[parameters('addressPrefixes')]"
              },
              "subnets": "[variables('subnetNamevar')]"
          }
        },
        {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2020-05-01",
          "location": "[parameters('location')]",
          "name": "[variables('subnetNamevar')]",
          "dependsOn": [
            "[variables('vnetName')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('addressPrefixes')]"
          }
        },
        {
            "name": "[variables('pipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsLabelPrefix')]"
				}
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            }
        },
        {
            "name": "[variables('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "OpenLogic",
                        "offer": "CentOS",
                        "sku": "7.5",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPublicKey": "[parameters('adminPublicKey')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('storageName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "identity": {
                "type": "systemAssigned"
            }
        },
      {
        "name": "[concat('shutdown-computevm-', variables('vmName'))]",
        "type": "Microsoft.DevTestLab/schedules",
        "apiVersion": "2017-04-26-preview",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
          "status": "[parameters('autoShutdownStatus')]",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
            "time": "[parameters('autoShutdownTime')]"
          },
          "timeZoneId": "[parameters('autoShutdownTimeZone')]",
          "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
          "notificationSettings": {
            "status": "[parameters('autoShutdownNotificationStatus')]",
            "notificationLocale": "[parameters('autoShutdownNotificationLocale')]",
            "timeInMinutes": "30",
            "emailRecipient": "[parameters('autoShutdownNotificationEmail')]"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmName'),'/newuserscript')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[parameters('_artifactsLocation')]"
            ],
            "commandToExecute": "sh install_apache.sh"
          }
        }
      }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
