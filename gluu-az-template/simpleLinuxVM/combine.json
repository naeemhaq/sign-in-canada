{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmName": {
        "type": "array",
        "defaultValue": [
            "couchbase",
            "gluu"
        ]
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "dev1-auth",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "OSVersion": {
        "type": "array",
        "defaultValue": [
            "7_9",
            "8.0"
        ],
        "metadata": {
          "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "VmSize": {
        "type": "string",
        "defaultValue": "Standard_A2_v2",
        "metadata": {
          "description": "The size of the VM"
        }
      },
      "autoShutdownNotificationEmail": {
        "type": "string",
        "defaultValue": "info@nqtech.ca"
      },
      "autoShutdownNotificationLocale": {
        "type": "string",
        "defaultValue": "en"
      },
      "autoShutdownNotificationStatus": {
        "type": "string",
        "defaultValue": "Enabled"
      },
      "autoShutdownStatus": {
        "type": "string",
        "defaultValue": "Enabled"
      },
      "autoShutdownTime": {
        "type": "string",
        "defaultValue": "17:30"
      },
      "autoShutdownTimeZone": {
        "type": "string",
        "defaultValue": "Eastern Standard Time"
      },
      "subnetAddressPrefix":{
        "type":"string",
        "defaultValue": "10.0.1.0/24"
      },
      "addressPrefix":{
        "type": "string",
        "defaultValue": "10.0.1.0/24"
      }
    },
    "variables": {
        "storageName": "[toLower( concat( resourceGroup().name,'st') )]",
        "nsgID": "[resourceId('network-cc-rg', 'Microsoft.Network/networkSecurityGroups/common-nsg')]",
        "nsgName": "[resourceId('network-cc-rg', 'Microsoft.Network/networkSecurityGroups/common-nsg')]",
        "vnetName": "[toLower( concat( resourceGroup().name,'vnet') )]",
        "subnetName": "[toLower( concat(resourceGroup().name, 'subnet' ) )]",
        "publicIpAddressName": "[concat(parameters('vmName'), 'PublicIP' )]",
        "networkInterfaceName": "[concat(parameters('vmName'),'NetInt')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
        "osDiskType": "StandardSSD_LRS",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
            "publicKeys": [
                {
                "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                "keyData": "[parameters('adminPasswordOrKey')]"
                }
            ]
            }
        }
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageName')]",
        "apiVersion": "2015-06-15",
        "location": "[parameters('location')]",
        "properties": {
          "accountType": "Standard_LRS"
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-05-01",
        "name": "[concat(variables('networkInterfaceName'),copyIndex(1))]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks/', concat(variables('vnetName'),copyIndex(1)))]",
          "[resourceId('Microsoft.Network/publicIpAddresses/', concat(variables('publicIpAddressName'),copyIndex(1)))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'),copyIndex(1)))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[variables('nsgID')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-05-01",
        "name": "[variables('vnetName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2020-05-01",
        "name": "[concat(variables('publicIpAddressName'),copyIndex(1))]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "properties": {
          "publicIpAllocationMethod": "Dynamic",
          "publicIPAddressVersion": "IPv4",
          "dnsSettings": {
            "domainNameLabel": "[concat(parameters('dnsLabelPrefix'),copyIndex(1))]"
          },
          "idleTimeoutInMinutes": 4
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "name": "[parameters('vmName')[copyIndex()]]",
         "copy": {
            "name": "vmcopy",
            "count": "[length(parameters('vmName'))]"
        },
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('networkInterfaceName'),copyIndex(1)))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('VmSize')]"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "fromImage",
              "managedDisk": {
                "storageAccountType": "[variables('osDiskType')]"
              }
            },
            "imageReference": {
              "publisher": "OpenLogic",
              "offer": "CentOS",
              "sku": "[parameters('OSVersion')[copyIndex()]]",
                "copy": {
                    "name": "skucopy",
                    "count": "[length(parameters('OSVersion'))]"
                },
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'),copyIndex(1)))]"
              }
            ]
          },
          "osProfile": {
            "computerName": "[parameters('vmName')[copyIndex()]]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[concat('https://', variables('storageName'), '.blob.core.windows.net/')]"
            }
          }
        },
        "identity": {
          "type": "systemAssigned"
        }
      },
      {
        "name": "[concat('shutdown-computevm-', parameters('vmName')[copyIndex()])]",
        "type": "Microsoft.DevTestLab/schedules",
        "apiVersion": "2018-09-15",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName')[copyIndex()])]"
        ],
        "properties": {
          "status": "[parameters('autoShutdownStatus')]",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
            "time": "[parameters('autoShutdownTime')]"
          },
          "timeZoneId": "[parameters('autoShutdownTimeZone')]",
          "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')[copyIndex()])]",
          "notificationSettings": {
            "status": "[parameters('autoShutdownNotificationStatus')]",
            "notificationLocale": "[parameters('autoShutdownNotificationLocale')]",
            "timeInMinutes": 30,
            "emailRecipient": "[parameters('autoShutdownNotificationEmail')]"
          }
        }
      }
    ],
    "outputs": {
      "createdVmName": {
          "type": "string",
          "value": "[parameters('vmName')[copyIndex()]]"
      },
      "vmResouceGroupName": {
      "type" : "string",
      "value": "[resourceGroup().name]"
      },
      "pvtIPAddress": {
        "value": "[reference(concat('Microsoft.Network/networkInterfaces/', concat(variables('networkInterfaceName'),copyIndex(1)))).ipConfigurations[0].properties.privateIPAddress]",  
        "type": "string" 
      }
    }
  }
